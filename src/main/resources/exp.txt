ver. 1.5.18
一、基础认识************************************************************
Spring Boot的【基础结构】共三个文件：
src/main/java 程序开发及主程序入口
src/main/resources 配置文件
src/test/java 测试程序

约定的【目录结构】：
root package结构：com.example.myproject
com
    +-example
        +-myproject
            +-Application.java （根目录下，主要做一些框架配置）
            |
            +- domain
            |   +- Customer.java （实体Entity）
            |   +- CustomerRepository.java （数据访问层）
            |
            +- service （业务类代码）
            |   +- CustonerService.java
            |
            +- controller （页面访问控制）
            |   +- CustomerController.java
            |

【重点】：引入web模块依赖，编写controller，编写单元测试，启动主程序
此外：热启动配置，可能会遇到点麻烦
**********************************************************************
二、web综合开发常用技术**********************************************************************
【json接口开发】使用@RestController

【filters】用于调用日志、排除有XSS威胁的字符、执行权限验证等等
Spring Boot 自定义Filter步骤：
1.实现Filter接口实现Filter方法；2.添加@Configuration注解，将自定义Filter加入过滤链

【默认配置文件】application.properties 可直接通过注解配置在代码中获得值

【日志】SpringBoot默认使用Logback作为日志记录工具。需要自定义配置的话，直接在默认配置文件配置

【数据库操作】底层domain两个类，一个实体类，一个持久化操作类。当使用jpa时，注意JDK版本
当找不到javax.xml.bind。JAXBException时，因为JDK版本过高，从JDK9开始，此类已被移出J2SE
需要手动处理此API依赖，JDK6,7,8没有这个问题。不过这个问题只影响单元测试，项目依旧能启动

【模板引擎】thymeleaf。引入依赖后按语法使用

【WebJars】前端的maven。可以以jar包的形式来使用前端各种框架和组件。有类似maven中央仓库的网站
******************************************************************************************
三、SpringBoot中的Redis********************************************************************************
下载安装【Redis】，启动服务。需要注意依赖对象。不同SpringBoot应当依赖不同的jar
1.5.18版本的SpringBoot引用spring-boot-starter-redis，同时需要指明版本，如1.4.6.RELEASE
2.0之后的版本引用spring-boot-starter-data-redis(理论上1.4版本之后都需要用新依赖)
在默认配置文件中对Redis进行配置，并添加高速缓存的配置类RedisConfig.java即可使用，在测试类中测试手动使用
1.5.18的高速缓存配置类编写三个Bean KeyGenerator CacheManager RedisTemplate
【自动生成缓存】使用@Cacheable。验证方法就是看hibernate有没有输出sql语句

【Session】的管理，共享（分布式系统中需要）,使用Redis
1.引入依赖；2.编写Session配置类SessionConfig.java，设定session失效时间
多台设备共享session。在其他边按同样的步骤配置一次，启动后自动共享？
****************************************************************************************************
四、thymeleaf******************************************************************************************
类FreeMarker【模板引擎】，完全替代JSP
【标准表达式语法】支持常用的语法有：字面，文本操作，算术运算，布尔操作，比较和等价，条件运算符
1.变量表达式：${session.user.name} <span th:text="${book.author.name}"> <li th:each="book:${books}">
2.选择或星号表达式: *{customer.name} (会在父标签的值上表达)
如：父标签<div th:object="${session.user}"> 子标签<p>Name:<span th:text="*{firstName}"></span></p>
等价于： <p>Name:<span th:text="${session.user.firstName}"></span></p>
3.文字国际化表达式: #{main.title} #{message.entrycreated(${entryId})}
4.URL表达式: @{/order/list} @{/order/details(id=${orderId})} @{../documents/report}
【th标签】常用场景
<th:text="${xxx}"> 赋值，字符串拼接
<th:if="${xxx=='xxx'}"> <th:unless=${***!=***}> 条件判断
<th:each="x:${xs}"> for循环
<th:href="@{...}"> URL
<th:inline="text/javascript/none"> 内联js
<th:frament=".."> <th:include="..::.."> <th:replace="..::.."> 布局
【内嵌变量】 ${#dates.createNow()} 实例一个当前时间（通过#直接调用内嵌Java各种工具类）
****************************************************************************************************
五、spring data jpa********************************************************************************
JPA是规范不是框架，而Spring Data JPA是Spring基于ORM框架、JPA规范的基础上封装的一套JPA应用框架。
封装了基本增删改查的【默认方法】，也能以关键字和对象属性名组成方法名进行【自定义简单查询】
【分页查询】使用Pageable类和Sort类进行相关参数传递，页数从0开始计数
【限制查询】可以通过关键字和对象属性名组装自定义方法名实现
【自定义SQL查询】使用注解@Query，@Modifying，@Transactional
【多表查询】两种方式 1.hibernate的级联查询 2.创建一个结果集的接口来接收连表查询的结果
【同源数据库的多源支持】配置多数据源->不同源的实体放入不同包路径->声明不同的包路径下使用不同的数据源和事务支持
【异构数据库多源支持】比如实体类声明@Entity关系型数据库支持类型，声明@Document为mongodb支持类型
不同数据源使用不同的实体就可以了，也可以通过对不同包路径进行声明，如A包下用mysqlB包下用mongodb
其它注意点，不需要和数据库映射的属性加上@Transient
****************************************************************************************************